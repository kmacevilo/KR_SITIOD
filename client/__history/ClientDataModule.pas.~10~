unit ClientDataModule;

interface

uses
  System.SysUtils, System.Classes, Data.DBXDataSnap, IPPeerClient,
  Data.DBXCommon, Data.DB, Datasnap.DBClient, Datasnap.DSConnect, Data.SqlExpr;

type
  TDataModule1 = class(TDataModule)
    SQLConnection1: TSQLConnection;
    DSProviderConnection1: TDSProviderConnection;
    CDSetPlashka: TClientDataSet;
    DSPlashka: TDataSource;
    CDSetPlashkaCODE_TAM: TWideStringField;
    CDSetPlashkaCODE_VID: TFMTBCDField;
    CDSetPlashkaCODE_TIP: TFMTBCDField;
    CDSetPlashkaLITERA: TWideStringField;
    CDSetPlashkaNUMBER_SITK: TWideStringField;
    CDSetPlashkaCODE_MATERIAL: TFMTBCDField;
    CDSetPlashkaD_V: TSQLTimeStampField;
    CDSetPlashkaD_ON: TSQLTimeStampField;
    CDSetPlashkaD_OFF: TSQLTimeStampField;
    CDSetPlashkaID_DOC_ON: TFMTBCDField;
    CDSetPlashkaID_DOC_OFF: TFMTBCDField;
    CDSetPlashkaCODE_PRICH: TFMTBCDField;
    CDSetPlashkaID_AKT_UNICHTOJ: TFMTBCDField;
    CDSetPlashkaNUM_DOC: TWideStringField;
    CDSetCustom: TClientDataSet;
    DSCustom: TDataSource;
    CDSetVidPL: TClientDataSet;
    CDSetTipPL: TClientDataSet;
    DSVidPL: TDataSource;
    DSTipPL: TDataSource;
    CDSetVidPLCODE_VID: TFMTBCDField;
    CDSetVidPLNAME: TWideStringField;
    CDSetTipPLID: TFMTBCDField;
    CDSetTipPLCODE_VID: TFMTBCDField;
    CDSetTipPLCODE_TIP: TFMTBCDField;
    CDSetTipPLNAME: TWideStringField;
    CDSetCustomID_TAM: TWideStringField;
    CDSetCustomCODE: TWideStringField;
    CDSetCustomD_ON: TSQLTimeStampField;
    CDSetCustomD_OFF: TSQLTimeStampField;
    CDSetCustomNAME: TWideStringField;
    CDSetCustomADR: TWideStringField;
    CDSetCustomCODE_FIN: TWideStringField;
    CDSetCustomID_OFF: TWideStringField;
    CDSetCustomFONE_OKD: TWideStringField;
    CDSetCustomFAX_OKD: TWideStringField;
    CDSetCustomID_OWNER: TWideStringField;
    CDSetMaterials: TClientDataSet;
    DSMaterials: TDataSource;
    CDSetPlashkaID_STR: TFMTBCDField;
    CDSetAllUsersPL: TClientDataSet;
    DSAllUsersPL: TDataSource;
    CDSetLicoPL: TClientDataSet;
    DSLicoPL: TDataSource;
    procedure CDSetPlashkaCODE_TAMGetText(Sender: TField; var Text: string;
      DisplayText: Boolean);
  private
    { Private declarations }
  public
    { Public declarations }
    function ConnectToBase(): Boolean;
  end;

var
  DataModule1: TDataModule1;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

{ TDataModule1 }

procedure TDataModule1.CDSetPlashkaCODE_TAMGetText(Sender: TField;
  var Text: string; DisplayText: Boolean);
begin
      if Sender.AsString = '' then
      Text := '' else
      if Sender.AsInteger = 01 then
      Text := '01 ГТК' else
      if Sender.AsInteger = 02 then
      Text := '02 МЦТ'else
      if Sender.AsInteger = 05 then
      Text:= '05 МИНСК-2' else
      if Sender.AsInteger = 06 then
      Text:= '06 МРТ' else
      if Sender.AsInteger = 07 then
      Text:= '07 ВИТЕБСКАЯ ТАМОЖНЯ' else
      if Sender.AsInteger = 09 then
      Text := '09 БРЕСТСКАЯ ТАМОЖНЯ' else
      if Sender.AsInteger = 14 then
      Text:= '14 ГОМЕЛЬСКАЯ ТАМОЖНЯ' else
      if Sender.AsInteger = 16 then
      Text := '16 ГРОДНЕНСКАЯ ТАМОЖНЯ' else
      if Sender.AsInteger = 20 then
      Text:= '20 МОГИЛЕВСКАЯ ТАМОЖНЯ';

end;

function TDataModule1.ConnectToBase: Boolean;
begin
  Result := false;
  try
   //Настройки подключения к серверу
   Datamodule1.SQLConnection1.Close;

   Datamodule1.SQLConnection1.DriverName := 'DataSnap'; //Имя драйвера для соединения

   Datamodule1.SQLConnection1.KeepConnection := true; //Поддерживать соединение с сервером БД, если в приложении нет активизированных датасетов
   {Datamodule1.SQLConnection1.Params.Clear; //очистка параметров
   Datamodule1.SQLConnection1.Params.Add('CommunicationIPVersion=IP_IPv4');
   Datamodule1.SQLConnection1.Params.Add('DSAuthenticationUser='+MainForm.USERNAME);
   Datamodule1.SQLConnection1.Params.Add('DSAuthenticationPassword='+MainForm.PASSWORD);
   Datamodule1.SQLConnection1.Params.Add('DriverUnit=Data.DBXDataSnap');
   Datamodule1.SQLConnection1.Params.Add('HostName='+MainForm.SERVER_IP);
   Datamodule1.SQLConnection1.Params.Add('Port='+MainForm.SERVER_PORT);
   Datamodule1.SQLConnection1.Params.Add('CommunicationProtocol=tcp/ip');
   Datamodule1.SQLConnection1.Params.Add('DatasnapContext=datasnap/');
   Datamodule1.SQLConnection1.Params.Add('DriverAssemblyLoader=Borland.Data.TDBXClientDriverLoader,Borland.Data.DbxClientDriver,Version=21.0.0.0,Culture=neutral,PublicKeyToken=91d62ebb5b0d1b1b');  }
   //Datamodule1.SQLConnection1.Params.Add('Filters={"ZLibCompression":{"CompressMoreThan":"1024"}}');
   Datamodule1.SQLConnection1.Connected:=True;

   Result := True;
  except
    on E:Exception do
      begin
        Result := false;
      end;

  end;
end;

end.
